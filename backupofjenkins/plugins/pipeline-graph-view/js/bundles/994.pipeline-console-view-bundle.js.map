{"version":3,"file":"994.pipeline-console-view-bundle.js","mappings":"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","sources":["webpack://pipeline-graph-view-plugin/./node_modules/@mui/icons-material/ChevronRight.js","webpack://pipeline-graph-view-plugin/./node_modules/@mui/lab/TreeItem/TreeItemContent.js","webpack://pipeline-graph-view-plugin/./node_modules/@mui/lab/TreeItem/useTreeItem.js","webpack://pipeline-graph-view-plugin/./node_modules/@mui/lab/TreeItem/treeItemClasses.js","webpack://pipeline-graph-view-plugin/./node_modules/@mui/lab/TreeItem/TreeItem.js","webpack://pipeline-graph-view-plugin/./node_modules/@mui/lab/TreeView/treeViewClasses.js","webpack://pipeline-graph-view-plugin/./node_modules/@mui/lab/TreeView/TreeView.js","webpack://pipeline-graph-view-plugin/./node_modules/@mui/lab/TreeView/TreeViewContext.js","webpack://pipeline-graph-view-plugin/./node_modules/@mui/lab/TreeView/descendants.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"className\", \"displayIcon\", \"expansionIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport useTreeItem from './useTreeItem';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TreeItemContent = /*#__PURE__*/React.forwardRef(function TreeItemContent(props, ref) {\n  const {\n    classes,\n    className,\n    displayIcon,\n    expansionIcon,\n    icon: iconProp,\n    label,\n    nodeId,\n    onClick,\n    onMouseDown\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection\n  } = useTreeItem(nodeId);\n  const icon = iconProp || expansionIcon || displayIcon;\n\n  const handleMouseDown = event => {\n    preventSelection(event);\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  const handleClick = event => {\n    handleExpansion(event);\n    handleSelection(event);\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions -- Key event is handled by the TreeView */\n    _jsxs(\"div\", _extends({\n      className: clsx(className, classes.root, expanded && classes.expanded, selected && classes.selected, focused && classes.focused, disabled && classes.disabled),\n      onClick: handleClick,\n      onMouseDown: handleMouseDown,\n      ref: ref\n    }, other, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.iconContainer,\n        children: icon\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classes.label,\n        children: label\n      })]\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItemContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * className applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display next to the tree node's label. Either a parent or end icon.\n   */\n  displayIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label. Either an expansion or collapse icon.\n   */\n  expansionIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func\n} : void 0;\nexport default TreeItemContent;","import * as React from 'react';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport default function useTreeItem(nodeId) {\n  const {\n    focus,\n    isExpanded,\n    isExpandable,\n    isFocused,\n    isDisabled,\n    isSelected,\n    multiSelect,\n    selectNode,\n    selectRange,\n    toggleExpansion\n  } = React.useContext(TreeViewContext);\n  const expandable = isExpandable ? isExpandable(nodeId) : false;\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n\n  const handleExpansion = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n      if (expandable && !(multiple && isExpanded(nodeId))) {\n        toggleExpansion(event, nodeId);\n      }\n    }\n  };\n\n  const handleSelection = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey);\n\n      if (multiple) {\n        if (event.shiftKey) {\n          selectRange(event, {\n            end: nodeId\n          });\n        } else {\n          selectNode(event, nodeId, true);\n        }\n      } else {\n        selectNode(event, nodeId);\n      }\n    }\n  };\n\n  const preventSelection = event => {\n    if (event.shiftKey || event.ctrlKey || event.metaKey || disabled) {\n      // Prevent text selection\n      event.preventDefault();\n    }\n  };\n\n  return {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTreeItemUtilityClass(slot) {\n  return generateUtilityClass('MuiTreeItem', slot);\n}\nconst treeItemClasses = generateUtilityClasses('MuiTreeItem', ['root', 'group', 'content', 'expanded', 'selected', 'focused', 'disabled', 'iconContainer', 'label']);\nexport default treeItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport Collapse from '@mui/material/Collapse';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { ownerDocument, useForkRef, unsupportedProp } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport TreeItemContent from './TreeItemContent';\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\n\nconst TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nconst StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: (props, styles) => {\n    return [styles.content, styles.iconContainer && {\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\n    }, styles.label && {\n      [`& .${treeItemClasses.label}`]: styles.label\n    }];\n  }\n})(({\n  theme\n}) => ({\n  padding: '0 8px',\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${treeItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  },\n  [`&.${treeItemClasses.focused}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${treeItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    [`&.${treeItemClasses.focused}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`& .${treeItemClasses.iconContainer}`]: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n  [`& .${treeItemClasses.label}`]: _extends({\n    width: '100%',\n    // fixes overflow - see https://github.com/mui/material-ui/issues/27372\n    minWidth: 0,\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)\n}));\nconst TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: (props, styles) => styles.group\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\nconst TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n\n  const {\n    children,\n    className,\n    collapseIcon,\n    ContentComponent = TreeItemContent,\n    ContentProps,\n    endIcon,\n    expandIcon,\n    disabled: disabledProp,\n    icon,\n    id: idProp,\n    label,\n    nodeId,\n    onClick,\n    onMouseDown,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    icons: contextIcons = {},\n    focus,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isDisabled,\n    multiSelect,\n    disabledItemsFocusable,\n    mapFirstChar,\n    unMapFirstChar,\n    registerNode,\n    unregisterNode,\n    treeId\n  } = React.useContext(TreeViewContext);\n  let id = null;\n\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = `${treeId}-${nodeId}`;\n  }\n\n  const [treeitemElement, setTreeitemElement] = React.useState(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(setTreeitemElement, ref);\n  const descendant = React.useMemo(() => ({\n    element: treeitemElement,\n    id: nodeId\n  }), [nodeId, treeitemElement]);\n  const {\n    index,\n    parentId\n  } = useDescendant(descendant);\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n\n  const ownerState = _extends({}, props, {\n    expanded,\n    focused,\n    selected,\n    disabled\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayIcon;\n  let expansionIcon;\n\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n\n  React.useEffect(() => {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index,\n        parentId,\n        expandable,\n        disabled: disabledProp\n      });\n      return () => {\n        unregisterNode(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(() => {\n    if (mapFirstChar && unMapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n      return () => {\n        unMapFirstChar(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  let ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\n     */\n    ariaSelected = true;\n  }\n\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      ownerDocument(event.target).getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n\n    const unfocusable = !disabledItemsFocusable && disabled;\n\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || null,\n    ref: handleRef,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    ownerState: ownerState,\n    onFocus: handleFocus,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      ownerState: ownerState\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to ContentComponent\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the node is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default TreeItem;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTreeViewUtilityClass(slot) {\n  return generateUtilityClass('MuiTreeView', slot);\n}\nconst treeViewClasses = generateUtilityClasses('MuiTreeView', ['root']);\nexport default treeViewClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disabledItemsFocusable\", \"disableSelection\", \"expanded\", \"id\", \"multiSelect\", \"onBlur\", \"onFocus\", \"onKeyDown\", \"onNodeFocus\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { styled, useTheme, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useControlled, useForkRef, ownerDocument, unstable_useId as useId } from '@mui/material/utils';\nimport TreeViewContext from './TreeViewContext';\nimport { DescendantProvider } from './descendants';\nimport { getTreeViewUtilityClass } from './treeViewClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTreeViewUtilityClass, classes);\n};\n\nconst TreeViewRoot = styled('ul', {\n  name: 'MuiTreeView',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 0,\n  margin: 0,\n  listStyle: 'none',\n  outline: 0\n});\n\nfunction isPrintableCharacter(string) {\n  return string && string.length === 1 && string.match(/\\S/);\n}\n\nfunction findNextFirstChar(firstChars, startIndex, char) {\n  for (let i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction noopSelection() {\n  return false;\n}\n\nconst defaultDefaultExpanded = [];\nconst defaultDefaultSelected = [];\nconst TreeView = /*#__PURE__*/React.forwardRef(function TreeView(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeView'\n  });\n\n  const {\n    children,\n    className,\n    defaultCollapseIcon,\n    defaultEndIcon,\n    defaultExpanded = defaultDefaultExpanded,\n    defaultExpandIcon,\n    defaultParentIcon,\n    defaultSelected = defaultDefaultSelected,\n    disabledItemsFocusable = false,\n    disableSelection = false,\n    expanded: expandedProp,\n    id: idProp,\n    multiSelect = false,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    onNodeFocus,\n    onNodeSelect,\n    onNodeToggle,\n    selected: selectedProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    defaultExpanded,\n    defaultSelected,\n    disabledItemsFocusable,\n    disableSelection,\n    multiSelect\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const treeId = useId(idProp);\n  const treeRef = React.useRef(null);\n  const handleRef = useForkRef(treeRef, ref);\n  const [focusedNodeId, setFocusedNodeId] = React.useState(null);\n  const nodeMap = React.useRef({});\n  const firstCharMap = React.useRef({});\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  });\n  const [selected, setSelectedState] = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  });\n  /*\n   * Status Helpers\n   */\n\n  const isExpanded = React.useCallback(id => Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false, [expanded]);\n  const isExpandable = React.useCallback(id => nodeMap.current[id] && nodeMap.current[id].expandable, []);\n  const isSelected = React.useCallback(id => Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id, [selected]);\n  const isDisabled = React.useCallback(id => {\n    let node = nodeMap.current[id]; // This can be called before the node has been added to the node map.\n\n    if (!node) {\n      return false;\n    }\n\n    if (node.disabled) {\n      return true;\n    }\n\n    while (node.parentId != null) {\n      node = nodeMap.current[node.parentId];\n\n      if (node.disabled) {\n        return true;\n      }\n    }\n\n    return false;\n  }, []);\n\n  const isFocused = id => focusedNodeId === id;\n  /*\n   * Child Helpers\n   */\n  // Using Object.keys -> .map to mimic Object.values we should replace with Object.values() once we stop IE11 support.\n\n\n  const getChildrenIds = id => Object.keys(nodeMap.current).map(key => {\n    return nodeMap.current[key];\n  }).filter(node => node.parentId === id).sort((a, b) => a.index - b.index).map(child => child.id);\n\n  const getNavigableChildrenIds = id => {\n    let childrenIds = getChildrenIds(id);\n\n    if (!disabledItemsFocusable) {\n      childrenIds = childrenIds.filter(node => !isDisabled(node));\n    }\n\n    return childrenIds;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  const getNextNode = id => {\n    // If expanded get first child\n    if (isExpanded(id) && getNavigableChildrenIds(id).length > 0) {\n      return getNavigableChildrenIds(id)[0];\n    }\n\n    let node = nodeMap.current[id];\n\n    while (node != null) {\n      // Try to get next sibling\n      const siblings = getNavigableChildrenIds(node.parentId);\n      const nextSibling = siblings[siblings.indexOf(node.id) + 1];\n\n      if (nextSibling) {\n        return nextSibling;\n      } // If the sibling does not exist, go up a level to the parent and try again.\n\n\n      node = nodeMap.current[node.parentId];\n    }\n\n    return null;\n  };\n\n  const getPreviousNode = id => {\n    const node = nodeMap.current[id];\n    const siblings = getNavigableChildrenIds(node.parentId);\n    const nodeIndex = siblings.indexOf(id);\n\n    if (nodeIndex === 0) {\n      return node.parentId;\n    }\n\n    let currentNode = siblings[nodeIndex - 1];\n\n    while (isExpanded(currentNode) && getNavigableChildrenIds(currentNode).length > 0) {\n      currentNode = getNavigableChildrenIds(currentNode).pop();\n    }\n\n    return currentNode;\n  };\n\n  const getLastNode = () => {\n    let lastNode = getNavigableChildrenIds(null).pop();\n\n    while (isExpanded(lastNode)) {\n      lastNode = getNavigableChildrenIds(lastNode).pop();\n    }\n\n    return lastNode;\n  };\n\n  const getFirstNode = () => getNavigableChildrenIds(null)[0];\n\n  const getParent = id => nodeMap.current[id].parentId;\n  /**\n   * This is used to determine the start and end of a selection range so\n   * we can get the nodes between the two border nodes.\n   *\n   * It finds the nodes' common ancestor using\n   * a naive implementation of a lowest common ancestor algorithm\n   * (https://en.wikipedia.org/wiki/Lowest_common_ancestor).\n   * Then compares the ancestor's 2 children that are ancestors of nodeA and NodeB\n   * so we can compare their indexes to work out which node comes first in a depth first search.\n   * (https://en.wikipedia.org/wiki/Depth-first_search)\n   *\n   * Another way to put it is which node is shallower in a trémaux tree\n   * https://en.wikipedia.org/wiki/Tr%C3%A9maux_tree\n   */\n\n\n  const findOrderInTremauxTree = (nodeAId, nodeBId) => {\n    if (nodeAId === nodeBId) {\n      return [nodeAId, nodeBId];\n    }\n\n    const nodeA = nodeMap.current[nodeAId];\n    const nodeB = nodeMap.current[nodeBId];\n\n    if (nodeA.parentId === nodeB.id || nodeB.parentId === nodeA.id) {\n      return nodeB.parentId === nodeA.id ? [nodeA.id, nodeB.id] : [nodeB.id, nodeA.id];\n    }\n\n    const aFamily = [nodeA.id];\n    const bFamily = [nodeB.id];\n    let aAncestor = nodeA.parentId;\n    let bAncestor = nodeB.parentId;\n    let aAncestorIsCommon = bFamily.indexOf(aAncestor) !== -1;\n    let bAncestorIsCommon = aFamily.indexOf(bAncestor) !== -1;\n    let continueA = true;\n    let continueB = true;\n\n    while (!bAncestorIsCommon && !aAncestorIsCommon) {\n      if (continueA) {\n        aFamily.push(aAncestor);\n        aAncestorIsCommon = bFamily.indexOf(aAncestor) !== -1;\n        continueA = aAncestor !== null;\n\n        if (!aAncestorIsCommon && continueA) {\n          aAncestor = nodeMap.current[aAncestor].parentId;\n        }\n      }\n\n      if (continueB && !aAncestorIsCommon) {\n        bFamily.push(bAncestor);\n        bAncestorIsCommon = aFamily.indexOf(bAncestor) !== -1;\n        continueB = bAncestor !== null;\n\n        if (!bAncestorIsCommon && continueB) {\n          bAncestor = nodeMap.current[bAncestor].parentId;\n        }\n      }\n    }\n\n    const commonAncestor = aAncestorIsCommon ? aAncestor : bAncestor;\n    const ancestorFamily = getChildrenIds(commonAncestor);\n    const aSide = aFamily[aFamily.indexOf(commonAncestor) - 1];\n    const bSide = bFamily[bFamily.indexOf(commonAncestor) - 1];\n    return ancestorFamily.indexOf(aSide) < ancestorFamily.indexOf(bSide) ? [nodeAId, nodeBId] : [nodeBId, nodeAId];\n  };\n\n  const getNodesInRange = (nodeA, nodeB) => {\n    const [first, last] = findOrderInTremauxTree(nodeA, nodeB);\n    const nodes = [first];\n    let current = first;\n\n    while (current !== last) {\n      current = getNextNode(current);\n      nodes.push(current);\n    }\n\n    return nodes;\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  const focus = (event, id) => {\n    if (id) {\n      setFocusedNodeId(id);\n\n      if (onNodeFocus) {\n        onNodeFocus(event, id);\n      }\n    }\n  };\n\n  const focusNextNode = (event, id) => focus(event, getNextNode(id));\n\n  const focusPreviousNode = (event, id) => focus(event, getPreviousNode(id));\n\n  const focusFirstNode = event => focus(event, getFirstNode());\n\n  const focusLastNode = event => focus(event, getLastNode());\n\n  const focusByFirstCharacter = (event, id, char) => {\n    let start;\n    let index;\n    const lowercaseChar = char.toLowerCase();\n    const firstCharIds = [];\n    const firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(nodeId => {\n      const firstChar = firstCharMap.current[nodeId];\n      const map = nodeMap.current[nodeId];\n      const visible = map.parentId ? isExpanded(map.parentId) : true;\n      const shouldBeSkipped = disabledItemsFocusable ? false : isDisabled(nodeId);\n\n      if (visible && !shouldBeSkipped) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start >= firstCharIds.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(event, firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  const toggleExpansion = (event, value = focusedNodeId) => {\n    let newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(id => id !== value);\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  const expandAllSiblings = (event, id) => {\n    const map = nodeMap.current[id];\n    const siblings = getChildrenIds(map.parentId);\n    const diff = siblings.filter(child => isExpandable(child) && !isExpanded(child));\n    const newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  const lastSelectedNode = React.useRef(null);\n  const lastSelectionWasRange = React.useRef(false);\n  const currentRangeSelection = React.useRef([]);\n\n  const handleRangeArrowSelect = (event, nodes) => {\n    let base = selected.slice();\n    const {\n      start,\n      next,\n      current\n    } = nodes;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(id => id === start || id !== current);\n        currentRangeSelection.current = currentRangeSelection.current.filter(id => id === start || id !== current);\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  const handleRangeSelect = (event, nodes) => {\n    let base = selected.slice();\n    const {\n      start,\n      end\n    } = nodes; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = base.filter(id => currentRangeSelection.current.indexOf(id) === -1);\n    }\n\n    let range = getNodesInRange(start, end);\n    range = range.filter(node => !isDisabled(node));\n    currentRangeSelection.current = range;\n    let newSelected = base.concat(range);\n    newSelected = newSelected.filter((id, i) => newSelected.indexOf(id) === i);\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const handleMultipleSelect = (event, value) => {\n    let newSelected;\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(id => id !== value);\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const handleSingleSelect = (event, value) => {\n    const newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  const selectNode = (event, id, multiple = false) => {\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  const selectRange = (event, nodes, stacked = false) => {\n    const {\n      start = lastSelectedNode.current,\n      end,\n      current\n    } = nodes;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start,\n        next: end,\n        current\n      });\n    } else if (start != null && end != null) {\n      handleRangeSelect(event, {\n        start,\n        end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n  };\n\n  const rangeSelectToFirst = (event, id) => {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    const start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    selectRange(event, {\n      start,\n      end: getFirstNode()\n    });\n  };\n\n  const rangeSelectToLast = (event, id) => {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    const start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    selectRange(event, {\n      start,\n      end: getLastNode()\n    });\n  };\n\n  const selectNextNode = (event, id) => {\n    if (!isDisabled(getNextNode(id))) {\n      selectRange(event, {\n        end: getNextNode(id),\n        current: id\n      }, true);\n    }\n  };\n\n  const selectPreviousNode = (event, id) => {\n    if (!isDisabled(getPreviousNode(id))) {\n      selectRange(event, {\n        end: getPreviousNode(id),\n        current: id\n      }, true);\n    }\n  };\n\n  const selectAllNodes = event => {\n    selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  const registerNode = React.useCallback(node => {\n    const {\n      id,\n      index,\n      parentId,\n      expandable,\n      idAttribute,\n      disabled\n    } = node;\n    nodeMap.current[id] = {\n      id,\n      index,\n      parentId,\n      expandable,\n      idAttribute,\n      disabled\n    };\n  }, []);\n  const unregisterNode = React.useCallback(id => {\n    const newMap = _extends({}, nodeMap.current);\n\n    delete newMap[id];\n    nodeMap.current = newMap;\n    setFocusedNodeId(oldFocusedNodeId => {\n      if (oldFocusedNodeId === id && treeRef.current === ownerDocument(treeRef.current).activeElement) {\n        return getChildrenIds(null)[0];\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, []);\n  const mapFirstChar = React.useCallback((id, firstChar) => {\n    firstCharMap.current[id] = firstChar;\n  }, []);\n  const unMapFirstChar = React.useCallback(id => {\n    const newMap = _extends({}, firstCharMap.current);\n\n    delete newMap[id];\n    firstCharMap.current = newMap;\n  }, []);\n  /**\n   * Event handlers and Navigation\n   */\n\n  const handleNextArrow = event => {\n    if (isExpandable(focusedNodeId)) {\n      if (isExpanded(focusedNodeId)) {\n        focusNextNode(event, focusedNodeId);\n      } else if (!isDisabled(focusedNodeId)) {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  const handlePreviousArrow = event => {\n    if (isExpanded(focusedNodeId) && !isDisabled(focusedNodeId)) {\n      toggleExpansion(event, focusedNodeId);\n      return true;\n    }\n\n    const parent = getParent(focusedNodeId);\n\n    if (parent) {\n      focus(event, parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleKeyDown = event => {\n    let flag = false;\n    const key = event.key; // If the tree is empty there will be no focused node\n\n    if (event.altKey || event.currentTarget !== event.target || !focusedNodeId) {\n      return;\n    }\n\n    const ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (!disableSelection && !isDisabled(focusedNodeId)) {\n          if (multiSelect && event.shiftKey) {\n            selectRange(event, {\n              end: focusedNodeId\n            });\n            flag = true;\n          } else if (multiSelect) {\n            flag = selectNode(event, focusedNodeId, true);\n          } else {\n            flag = selectNode(event, focusedNodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (!isDisabled(focusedNodeId)) {\n          if (isExpandable(focusedNodeId)) {\n            toggleExpansion(event);\n            flag = true;\n          } else if (multiSelect) {\n            flag = selectNode(event, focusedNodeId, true);\n          } else {\n            flag = selectNode(event, focusedNodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey && !disableSelection) {\n          selectNextNode(event, focusedNodeId);\n        }\n\n        focusNextNode(event, focusedNodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey && !disableSelection) {\n          selectPreviousNode(event, focusedNodeId);\n        }\n\n        focusPreviousNode(event, focusedNodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (isRtl) {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (isRtl) {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey && !disableSelection && !isDisabled(focusedNodeId)) {\n          rangeSelectToFirst(event, focusedNodeId);\n        }\n\n        focusFirstNode(event);\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey && !disableSelection && !isDisabled(focusedNodeId)) {\n          rangeSelectToLast(event, focusedNodeId);\n        }\n\n        focusLastNode(event);\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, focusedNodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a' && !disableSelection) {\n          selectAllNodes(event);\n          flag = true;\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(event, focusedNodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // if the event bubbled (which is React specific) we don't want to steal focus\n    if (event.target === event.currentTarget) {\n      const firstSelected = Array.isArray(selected) ? selected[0] : selected;\n      focus(event, firstSelected || getNavigableChildrenIds(null)[0]);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocusedNodeId(null);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const activeDescendant = nodeMap.current[focusedNodeId] ? nodeMap.current[focusedNodeId].idAttribute : null;\n  return /*#__PURE__*/_jsx(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon,\n        defaultExpandIcon,\n        defaultParentIcon,\n        defaultEndIcon\n      },\n      focus,\n      toggleExpansion,\n      isExpanded,\n      isExpandable,\n      isFocused,\n      isSelected,\n      isDisabled,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      multiSelect,\n      disabledItemsFocusable,\n      mapFirstChar,\n      unMapFirstChar,\n      registerNode,\n      unregisterNode,\n      treeId\n    },\n    children: /*#__PURE__*/_jsx(DescendantProvider, {\n      children: /*#__PURE__*/_jsx(TreeViewRoot, _extends({\n        role: \"tree\",\n        id: treeId,\n        \"aria-activedescendant\": activeDescendant,\n        \"aria-multiselectable\": multiSelect,\n        className: clsx(classes.root, className),\n        ref: handleRef,\n        tabIndex: 0,\n        onKeyDown: handleKeyDown,\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        ownerState: ownerState\n      }, other, {\n        children: children\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   * @default []\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   * @default []\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true` selection is disabled.\n   * @default false\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   * @default false\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are focused.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback **Warning**: This is a generic event not a focus event.\n   * @param {string} value of the focused node.\n   */\n  onNodeFocus: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback\n   * @param {string[] | string} nodeIds Ids of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TreeView;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TreeViewContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"element\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\n/** Credit: https://github.com/reach/reach-ui/blob/86a046f54d53b6420e392b3fa56dd991d9d4e458/packages/descendants/README.md\n *  Modified slightly to suit our purposes.\n */\n// To replace with .findIndex() once we stop IE11 support.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction binaryFindElement(array, element) {\n  let start = 0;\n  let end = array.length - 1;\n\n  while (start <= end) {\n    const middle = Math.floor((start + end) / 2);\n\n    if (array[middle].element === element) {\n      return middle;\n    } // eslint-disable-next-line no-bitwise\n\n\n    if (array[middle].element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING) {\n      end = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n  }\n\n  return start;\n}\n\nconst DescendantContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DescendantContext.displayName = 'DescendantContext';\n}\n\nfunction usePrevious(value) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\nconst noop = () => {};\n/**\n * This hook registers our descendant by passing it into an array. We can then\n * search that array by to find its index when registering it in the component.\n * We use this for focus management, keyboard navigation, and typeahead\n * functionality for some components.\n *\n * The hook accepts the element node\n *\n * Our main goals with this are:\n *   1) maximum composability,\n *   2) minimal API friction\n *   3) SSR compatibility*\n *   4) concurrent safe\n *   5) index always up-to-date with the tree despite changes\n *   6) works with memoization of any component in the tree (hopefully)\n *\n * * As for SSR, the good news is that we don't actually need the index on the\n * server for most use-cases, as we are only using it to determine the order of\n * composed descendants for keyboard navigation.\n */\n\n\nexport function useDescendant(descendant) {\n  const [, forceUpdate] = React.useState();\n  const {\n    registerDescendant = noop,\n    unregisterDescendant = noop,\n    descendants = [],\n    parentId = null\n  } = React.useContext(DescendantContext); // This will initially return -1 because we haven't registered the descendant\n  // on the first render. After we register, this will then return the correct\n  // index on the following render and we will re-register descendants\n  // so that everything is up-to-date before the user interacts with a\n  // collection.\n\n  const index = findIndex(descendants, item => item.element === descendant.element);\n  const previousDescendants = usePrevious(descendants); // We also need to re-register descendants any time ANY of the other\n  // descendants have changed. My brain was melting when I wrote this and it\n  // feels a little off, but checking in render and using the result in the\n  // effect's dependency array works well enough.\n\n  const someDescendantsHaveChanged = descendants.some((newDescendant, position) => {\n    return previousDescendants && previousDescendants[position] && previousDescendants[position].element !== newDescendant.element;\n  }); // Prevent any flashing\n\n  useEnhancedEffect(() => {\n    if (descendant.element) {\n      registerDescendant(_extends({}, descendant, {\n        index\n      }));\n      return () => {\n        unregisterDescendant(descendant.element);\n      };\n    }\n\n    forceUpdate({});\n    return undefined;\n  }, [registerDescendant, unregisterDescendant, index, someDescendantsHaveChanged, descendant]);\n  return {\n    parentId,\n    index\n  };\n}\nexport function DescendantProvider(props) {\n  const {\n    children,\n    id\n  } = props;\n  const [items, set] = React.useState([]);\n  const registerDescendant = React.useCallback(_ref => {\n    let {\n      element\n    } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n    set(oldItems => {\n      let newItems;\n\n      if (oldItems.length === 0) {\n        // If there are no items, register at index 0 and bail.\n        return [_extends({}, other, {\n          element,\n          index: 0\n        })];\n      }\n\n      const index = binaryFindElement(oldItems, element);\n\n      if (oldItems[index] && oldItems[index].element === element) {\n        // If the element is already registered, just use the same array\n        newItems = oldItems;\n      } else {\n        // When registering a descendant, we need to make sure we insert in\n        // into the array in the same order that it appears in the DOM. So as\n        // new descendants are added or maybe some are removed, we always know\n        // that the array is up-to-date and correct.\n        //\n        // So here we look at our registered descendants and see if the new\n        // element we are adding appears earlier than an existing descendant's\n        // DOM node via `node.compareDocumentPosition`. If it does, we insert\n        // the new element at this index. Because `registerDescendant` will be\n        // called in an effect every time the descendants state value changes,\n        // we should be sure that this index is accurate when descendent\n        // elements come or go from our component.\n        const newItem = _extends({}, other, {\n          element,\n          index\n        }); // If an index is not found we will push the element to the end.\n\n\n        newItems = oldItems.slice();\n        newItems.splice(index, 0, newItem);\n      }\n\n      newItems.forEach((item, position) => {\n        item.index = position;\n      });\n      return newItems;\n    });\n  }, []);\n  const unregisterDescendant = React.useCallback(element => {\n    set(oldItems => oldItems.filter(item => element !== item.element));\n  }, []);\n  const value = React.useMemo(() => ({\n    descendants: items,\n    registerDescendant,\n    unregisterDescendant,\n    parentId: id\n  }), [items, registerDescendant, unregisterDescendant, id]);\n  return /*#__PURE__*/_jsx(DescendantContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DescendantProvider.propTypes = {\n  children: PropTypes.node,\n  id: PropTypes.string\n} : void 0;"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","props","ref","classes","className","displayIcon","expansionIcon","icon","iconProp","label","nodeId","onClick","onMouseDown","other","disabled","expanded","selected","focused","handleExpansion","handleSelection","preventSelection","focus","isExpanded","isExpandable","isFocused","isDisabled","isSelected","multiSelect","selectNode","selectRange","toggleExpansion","TreeViewContext","expandable","event","multiple","shiftKey","ctrlKey","metaKey","end","preventDefault","useTreeItem","root","children","iconContainer","getTreeItemUtilityClass","slot","generateUtilityClass","TreeItemRoot","styled","name","overridesResolver","styles","listStyle","margin","padding","outline","StyledTreeItemContent","content","theme","width","display","alignItems","cursor","WebkitTapHighlightColor","backgroundColor","vars","palette","action","hover","opacity","disabledOpacity","primary","mainChannel","selectedOpacity","main","hoverOpacity","focusOpacity","marginRight","flexShrink","justifyContent","fontSize","minWidth","paddingLeft","position","typography","body1","TreeItemGroup","Collapse","group","marginLeft","inProps","useThemeProps","collapseIcon","ContentComponent","ContentProps","endIcon","expandIcon","disabledProp","id","idProp","TransitionComponent","TransitionProps","icons","contextIcons","disabledItemsFocusable","mapFirstChar","unMapFirstChar","registerNode","unregisterNode","treeId","treeitemElement","setTreeitemElement","contentRef","handleRef","useForkRef","descendant","element","index","parentId","Boolean","Array","isArray","length","ownerState","composeClasses","useUtilityClasses","ariaSelected","defaultCollapseIcon","defaultExpandIcon","defaultParentIcon","defaultEndIcon","idAttribute","current","textContent","substring","toLowerCase","role","tabIndex","onFocus","target","currentTarget","ownerDocument","getElementById","preventScroll","unfocusable","as","unmountOnExit","in","component","getTreeViewUtilityClass","TreeViewRoot","findNextFirstChar","firstChars","startIndex","char","i","noopSelection","defaultDefaultExpanded","defaultDefaultSelected","defaultExpanded","defaultSelected","disableSelection","expandedProp","onBlur","onKeyDown","onNodeFocus","onNodeSelect","onNodeToggle","selectedProp","isRtl","useTheme","direction","useId","treeRef","focusedNodeId","setFocusedNodeId","nodeMap","firstCharMap","setExpandedState","useControlled","controlled","state","setSelectedState","indexOf","node","getChildrenIds","Object","keys","map","key","filter","sort","a","b","child","getNavigableChildrenIds","childrenIds","getNextNode","siblings","nextSibling","getPreviousNode","nodeIndex","currentNode","pop","getLastNode","lastNode","getFirstNode","focusNextNode","value","newExpanded","concat","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","newSelected","handleMultipleSelect","handleSingleSelect","nodes","stacked","start","base","slice","next","push","handleRangeArrowSelect","range","nodeA","nodeB","first","last","nodeAId","nodeBId","aFamily","bFamily","aAncestor","bAncestor","aAncestorIsCommon","bAncestorIsCommon","continueA","continueB","commonAncestor","ancestorFamily","aSide","bSide","findOrderInTremauxTree","getNodesInRange","handleRangeSelect","newMap","oldFocusedNodeId","activeElement","firstChar","handleNextArrow","handlePreviousArrow","parent","activeDescendant","Provider","flag","altKey","ctrlPressed","stopPropagation","selectNextNode","selectPreviousNode","focusPreviousNode","rangeSelectToFirst","focusFirstNode","rangeSelectToLast","focusLastNode","diff","expandAllSiblings","selectAllNodes","string","match","lowercaseChar","firstCharIds","forEach","visible","shouldBeSkipped","focusByFirstCharacter","firstSelected","DescendantContext","noop","useDescendant","forceUpdate","registerDescendant","unregisterDescendant","descendants","array","comp","findIndex","previousDescendants","usePrevious","someDescendantsHaveChanged","some","newDescendant","DescendantProvider","items","set","_ref","oldItems","newItems","middle","Math","floor","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","binaryFindElement","newItem","splice","item"],"sourceRoot":""}